---
import '../styles/global.css';
import Navbar from '../components/common/Navbar.astro';
import Footer from '../components/common/Footer.astro';
import StructuredData from '../components/common/StructuredData.astro';
import Analytics from '../components/seo/Analytics.astro';
import { VpnNotice } from '../components/ui';
import { ViewTransitions } from 'astro:transitions';

interface Props {
	title?: string;
	description?: string;
	image?: string;
	canonicalURL?: string;
}

const { 
	title = "VitaSpoon | Tu asistente de cocina personalizado", 
	description = "VitaSpoon | Tu generador de recetas personalizadas basado en tus preferencias, restricciones dietéticas e ingredientes disponibles.",
	image = "/images/VitaSpoon.png",
	canonicalURL = new URL(Astro.url.pathname, Astro.site)
} = Astro.props;

// Datos para el esquema WebSite
const websiteData = {
	name: "VitaSpoon",
	url: Astro.site?.toString() || "https://vitaspoon.vercel.app",
	description: "Tu asistente de cocina personalizado con recetas adaptadas a tus necesidades"
};

// Datos para el esquema Organization
const organizationData = {
	name: "VitaSpoon",
	url: Astro.site?.toString() || "https://vitaspoon.vercel.app",
	logo: `${Astro.site}/images/VitaSpoon.png` || "https://vitaspoon.vercel.app/images/VitaSpoon.png",
	socialProfiles: [
		"https://facebook.com/vitaspoon",
		"https://twitter.com/vitaspoon",
		"https://instagram.com/vitaspoon"
	]
};

// Recursos críticos para precargar
const criticalResources = [
	{ rel: 'preload', href: '/images/VitaSpoon.png', as: 'image' }
];
---

<!doctype html>
<html lang="es" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		
		<!-- Favicons -->
		<link rel="icon" type="image/svg+xml" href="/favicon.ico">
		<link rel="apple-touch-icon" sizes="180x180" href="/icons/apple-touch-icon.png">
		<link rel="icon" type="image/png" sizes="96x96" href="/icons/favicon-96x96.png">
		<link rel="manifest" href="/site.webmanifest">
		<link rel="shortcut icon" href="/favicon.ico">
		<meta name="msapplication-TileColor" content="#7c8e57">
		<meta name="msapplication-config" content="/browserconfig.xml">
		<meta name="theme-color" content="#059669">
		
		<link rel="canonical" href={canonicalURL} />
		<meta name="generator" content={Astro.generator} />
		
		<!-- View Transitions para navegación fluida -->
		<ViewTransitions fallback="swap" />
		
		<!-- Analytics and Site Verification -->
		<Analytics />
		
		<!-- Primary Meta Tags -->
		<title>{title}</title>
		<meta name="title" content={title} />
		<meta name="description" content={description} />
		<meta name="keywords" content="VitaSpoon, recetas personalizadas, asistente de cocina, dietas personalizadas, nutrición, comida saludable, alimentación, plan alimenticio, recetas saludables, cocina fácil" />
		<meta name="author" content="VitaSpoon" />
		<meta name="robots" content="index, follow" />
		
		<!-- Open Graph / Facebook -->
		<meta property="og:type" content="website" />
		<meta property="og:url" content={canonicalURL} />
		<meta property="og:title" content={title} />
		<meta property="og:description" content={description} />
		<meta property="og:image" content={image} />
		<meta property="og:locale" content="es_ES" />
		<meta property="og:site_name" content="VitaSpoon" />
		
		<!-- Twitter -->
		<meta property="twitter:card" content="summary_large_image" />
		<meta property="twitter:url" content={canonicalURL} />
		<meta property="twitter:title" content={title} />
		<meta property="twitter:description" content={description} />
		<meta property="twitter:image" content={image} />
		
		<!-- Preconnect to important resources -->
		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
		<link rel="preconnect" href="https://cdn.jsdelivr.net" crossorigin />
		
		<!-- Precargar recursos críticos -->
		{criticalResources.map(resource => (
			<link rel={resource.rel} href={resource.href} as={resource.as} />
		))}
		
		<!-- Remixicon para iconos - cargado con prioridad baja -->
		<link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet" media="print" onload="this.media='all'" />
		<noscript>
			<link href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css" rel="stylesheet" />
		</noscript>
		
		<!-- Structured Data -->
		<StructuredData type="WebSite" data={websiteData} />
		<StructuredData type="Organization" data={organizationData} />
	</head>
	<body class="min-h-screen flex flex-col bg-gray-50">
		<Navbar />
		<main 
			class="flex-1 page-content" 
			transition:animate="fade"
		>
			<slot />
		</main>
		<Footer />
		<VpnNotice client:idle transition:persist />
		
		<script>
			// Función para manejar la transición de página y asegurar que el menú móvil se cierre
			document.addEventListener('astro:before-preparation', () => {
				// Cerrar el menú móvil si está abierto
				const mobileMenu = document.getElementById('mobile-menu');
				if (mobileMenu && !mobileMenu.classList.contains('translate-x-full')) {
					// Restaurar el estado del scroll
					document.body.style.overflow = '';
					// Cerrar el menú
					mobileMenu.classList.remove('translate-x-0');
					mobileMenu.classList.add('translate-x-full');
					
					// Restaurar el botón hamburguesa
					const bar1 = document.getElementById('bar1');
					const bar2 = document.getElementById('bar2');
					const bar3 = document.getElementById('bar3');
					
					if (bar1 && bar2 && bar3) {
						bar1.style.transform = 'rotate(0)';
						bar1.style.top = '20%';
						bar1.style.marginTop = '0';
						
						bar2.style.opacity = '1';
						
						bar3.style.transform = 'rotate(0)';
						bar3.style.bottom = '20%';
						bar3.style.marginBottom = '0';
					}
				}
			});
			
			// Configuración para componentes React que deben persistir
			document.addEventListener('astro:page-load', () => {
				// Asegurarnos de que los componentes React con client:idle y transition:persist
				// mantengan su estado correctamente
				const persistentComponents = document.querySelectorAll('[data-astro-transition-persist]');
				persistentComponents.forEach(component => {
					// Aseguramos que los componentes React persistentes no pierdan su estado
					if (component.hasAttribute('data-react-component')) {
						component.setAttribute('data-persist-state', 'true');
					}
				});
			});
		</script>
	</body>
</html>

<style is:global>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
		overflow-x: hidden;
	}
	
	@media (pointer: coarse) {
		.scroll-smooth {
			scroll-behavior: smooth;
			-webkit-overflow-scrolling: touch;
		}
	}
	
	/* Animaciones personalizadas para las transiciones de página */
	@keyframes page-fade-in {
		from { opacity: 0; }
		to { opacity: 1; }
	}
	
	@keyframes page-fade-out {
		from { opacity: 1; }
		to { opacity: 0; }
	}
	
	@keyframes slide-up {
		from { opacity: 0; transform: translateY(20px); }
		to { opacity: 1; transform: translateY(0); }
	}
	
	@keyframes slide-down {
		from { opacity: 0; transform: translateY(-20px); }
		to { opacity: 1; transform: translateY(0); }
	}
	
	/* Aplicar transiciones personalizadas a elementos específicos */
	::view-transition-old(root) {
		animation: 0.2s page-fade-out ease;
	}
	
	::view-transition-new(root) {
		animation: 0.3s page-fade-in ease;
	}
	
	/* Animación para títulos principales */
	h1, h2 {
		view-transition-name: titles;
	}
	
	::view-transition-old(titles) {
		animation: 0.3s slide-up ease;
	}
	
	::view-transition-new(titles) {
		animation: 0.3s slide-down ease;
	}
	
	/* Animación para imágenes principales */
	.main-image {
		view-transition-name: main-image;
	}
	
	::view-transition-old(main-image) {
		animation: 0.3s page-fade-out ease;
	}
	
	::view-transition-new(main-image) {
		animation: 0.5s page-fade-in ease;
	}
</style>
